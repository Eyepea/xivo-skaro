; title_content_name
SIP trunk > Add

; smenu_general
General

; smenu_register
Register

; smenu_signalling
Signalling

; smenu_codecs
Codecs

; smenu_advanced
Advanced

; fm_protocol_name
Name:

; fm_protocol_username
Username:

; fm_protocol_secret
Password:

; fm_protocol_callerid
Caller ID:

; fm_protocol_context
Context:

; fm_protocol_calllimit
Call limit:

; fm_protocol_host-type
IP Addressing type:

; fm_protocol_host-type-opt(dynamic)
Dynamic

; fm_protocol_host-type-opt(static)
Static

; fm_protocol_port
Port:

; fm_protocol_dtmfmode
DTMF:

; fm_protocol_type
Identified by:

; fm_protocol_type-opt(peer)
Address

; fm_protocol_type-opt(friend)
Username

; fm_protocol_nat
NAT:

; fm_protocol_qualify
Monitoring:

; fm_protocol_canreinvite
Invite:

; fm_protocol_insecure
Insecure:

; fm_protocol_insecure-opt-port
Port

; fm_protocol_insecure-opt-invite
Invite

; fm_protocol_insecure-opt-all
All

; fm_codec-custom
Customize:

; fm_protocol_codec-disallow
Disable:

; fm_protocol_codec-disallow-opt-all
All

; fm_protocol_codec-allow
Enable:

; bt_upcodec
Up one or more codecs

; bt_downcodec
Down one or more codecs

; bt_incodec
Add one or more codecs ->

; bt_outcodec
<- Remove one or more codecs

; fm_register
Register:

; fm_register_username
Username:

; fm_register_password
Password:

; fm_register_authuser
Authentication:

; fm_register_host
Remote server:

; fm_register_port
Port:

; fm_register_contact
Contact:

; fm_protocol_calllimit-opt(0)
Unlimited

; fm_protocol_calllimit-opt
%s

; fm_protocol_host-type-opt(dynamic)
Dynamic

; fm_protocol_host-type-opt(static)
Static

; fm_protocol_language
Language :

; fm_protocol_nat-opt(no)
No

; fm_protocol_nat-opt(yes)
Yes

; fm_protocol_nat-opt(never)
Never

; fm_protocol_nat-opt(route)
Route



; fm_protocol_progressinband
Progress in BAND :

; fm_protocol_progressinband-opt(no)
No

; fm_protocol_progressinband-opt(yes)
Yes

; fm_protocol_progressinband-opt(never)
Never

; fm_protocol_dtmfmode-opt(rfc2833)
RFC 2833

; fm_protocol_dtmfmode-opt(inband)
InBand

; fm_protocol_dtmfmode-opt(info)
INFO

; fm_protocol_dtmfmode-opt(auto)
Auto

; fm_protocol_rfc2833compensate
Compensate DTMF RFC 2833 from another IPBX :

; fm_protocol_qualify
Qualify latency :

; fm_protocol_qualify-opt(no)
No

; fm_protocol_qualify-opt(yes)
Yes

; fm_protocol_qualify-opt
%s milliseconds

; fm_protocol_rtptimeout
RTP wait timeout :

; fm_protocol_rtptimeout-opt(0)
Disabled

; fm_protocol_rtptimeout-opt
%s seconds

; fm_protocol_rtpholdtimeout
RTP hold timeout :

; fm_protocol_rtpholdtimeout-opt(0)
Disabled

; fm_protocol_rtpholdtimeout-opt
%s seconds

; fm_protocol_rtpkeepalive
RTP keepalive :

; fm_protocol_rtpkeepalive-opt(0)
Disabled

; fm_protocol_rtpkeepalive-opt
%s seconds

; fm_protocol_allowtransfer
Allow transfers :

; fm_protocol_autoframing
Autoframing :

; fm_protocol_videosupport
Video support :

; fm_protocol-videosupport-opt(no)
No

; fm_protocol-videosupport-opt(yes)
Yes

; fm_protocol-videosupport-opt(always)
Always

; fm_protocol_outboundproxy
Outbound proxy : 

; fm_protocol_maxcallbitrate
Max call bitrate :

; fm_protocol_g726nonstandard
Activate non-standard G.726 support :

; fm_codec-custom
Customize codecs :

; fm_protocol_codec-disallow
Disabled Codecs :

; fm_protocol_codec-disallow-opt(all)
All



; fm_protocol_insecure-opt(no)
No

; fm_protocol_insecure-opt(port)
Port

; fm_protocol_insecure-opt(invite)
Invite

; fm_protocol_insecure-opt(all)
All

; fm_protocol_permit
Allowed IP address or subnet :

; fm_protocol_deny
Denied IP address or subnet :

; fm_protocol_trustrpid
Trust Remote-Party-ID :

; fm_protocol_sendrpid
Send Remote-Party-ID :

; fm_protocol_allowsubscribe
Allow subscriptions :

; fm_protocol_allowoverlap
Allow overlap :

; fm_protocol_promiscredir
Support 302 redirections :

; fm_protocol_usereqphone
Add ";user=phone" in URI :

; fm_protocol_canreinvite
Invite :

; fm_protocol_canreinvite-opt(no)
No

; fm_protocol_canreinvite-opt(yes)
Yes

; fm_protocol_canreinvite-opt(update)
Update

; fm_protocol_canreinvite-opt(nonat)
Without NAT

; fm_protocol_canreinvite-opt(update-nonat)
Update without NAT

; fm_protocol_fromuser
Rewriting the From field-User:

; fm_protocol_fromdomain
Rewriting the From field-Domain:

; fm_protocol_amaflags
amaflag :

; fm_protocol_accountcode
Account code :

; fm_protocol_useclientcode
Client code :

; fm_trunkfeatures_description
Description :


;;; 1.8 fields
; fm_protocol-transport
Transport : 

; hlp_fm_protocol-transport
Config asterisk: transport

; fm_protocol-remotesecret
Remote password : 

; hlp_fm_protocol-remotesecret
Config asterisk: remotesecret

; fm_protocol-directmedia
Invite:

; hlp_fm_protocol-directmedia
Config asterisk: directmedia

; fm_protocol-directmedia-opt(no)
No

; fm_protocol-directmedia-opt(yes)
Yes

; fm_protocol-directmedia-opt(nonat)

Without NAT

; fm_protocol-directmedia-opt(update)
Update

; fm_protocol-directmedia-opt(update,nonat)
Update without NAT

; fm_protocol-callcounter
Enable calls counter:

; hlp_fm_protocol-callcounter
Config asterisk: callcounter

; fm_protocol-busylevel
Send BUSY up to num. calls:

; hlp_fm_protocol-busylevel
Config asterisk: busylevel

; fm_protocol-ignoresdpversion
Ignore SDP packets version:

; hlp_fm_protocol-ignoresdpversion
Config asterisk: ignoresdpversion

; fm_protocol-session-timers
Session-timers mode: 

; hlp_fm_protocol-session-timers
Config asterisk: session-timers

; fm_protocol-session-timers-opt(originate)
Originate

; fm_protocol-session-timers-opt(accept)
Accept

; fm_protocol-session-timers-opt(refuse)
Refuse

; fm_protocol-session-expires
Maximum session refresh interval: 

; hlp_fm_protocol-session-expires
Config asterisk: session-expires

; fm_protocol-session-minse
Minimum session refresh interval:

; hlp_fm_protocol-session-minse
Config asterisk: session-minse

; fm_protocol-session-refresher
Session refresher:

; hlp_fm_protocol-session-refresher
Config asterisk: session-refresher

; fm_protocol-session-refresher-opt(uas)
Server

; fm_protocol-session-refresher-opt(uac)
Client

; fm_protocol-callbackextension
Callback extension:

; hlp_fm_protocol-callbackextension
Config asterisk: callbackextension

; fm_protocol-registertrying
Send «100 Trying» when register: 

; hlp_fm_protocol-registertrying
Config asterisk: registertrying

; fm_protocol-timert1
Minimum time of the round trip (RTT) messages:

; hlp_fm_protocol-timert1
Config asterisk: timert1

; fm_protocol-timerb
Call setup timer: 

; hlp_fm_protocol-timerb
Config asterisk: timerb

; fm_protocol-qualifyfreq
Qualify frequency : 

; hlp_fm_protocol-qualifyfreq
Config asterisk: qualifyfreq

; fm_protocol-contactpermit
Authorised contact addresses: 

; hlp_fm_protocol-contactpermit
Config asterisk: contactpermit

; fm_protocol-contactdeny
Rejected contact addresses: 

; hlp_fm_protocol-contactdeny
Config asterisk: contactdeny


; fm_register-transport
Transport : 

; hlp_fm_register-transport

; fm_register-expiry
Expiry : 

; hlp_fm_register-expiry
Config asterisk: expiry

; fm_register-callbackextension
Use callback extension : 



