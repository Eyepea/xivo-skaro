#!/usr/bin/perl -w
#
# Copyright (C) 2005-2006 Rodolphe Quiedeville <rodolphe@quiedeville.org>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# If you improve this script please send your version to my email address
# with the copyright notice upgrade with your name.
#
# Plugin to monitor number of messages in all voicemails
#
# $Log$
# Revision 1.1  2006/03/05 15:07:01  rodo
# Created by Rodolphe Quiedeville
#
# Parameters mandatory:
#
# 	username
# 	secret
#
#%# family=asterisk
#%# capabilities=autoconf

use strict;

my $ret = undef;
if (! eval "require Net::Telnet;")
{
    $ret = "Net::Telnet not found";
}

if ($ARGV[0] and $ARGV[0] eq "config")
{
    print "graph_title Asterisk Voicemail messages\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_vlabel messages\n";
    print "graph_category asterisk\n";
    print "messages.draw AREA\n";
    print "messages.label messages\n";
    exit 0;
}

my $host = exists $ENV{'host'} ? $ENV{'host'} : "127.0.0.1";
my $port = exists $ENV{'port'} ? $ENV{'port'} : "5038";

my $username = $ENV{'username'};
my $secret   = $ENV{'secret'};

#my $pop = new Net::Telnet (Telnetmode => 0);
#$pop->open(Host => $host,
#	   Port => $port);
#
### Read connection message.
#my $line = $pop->getline;
#die $line unless $line =~ /^Asterisk/;
#
### Send user name.
#$pop->print("Action: login");
#$pop->print("Username: $username");
#$pop->print("Secret: $secret");
#$pop->print("Events: off");
#$pop->print("");
#
##Response: Success
##Message: Authentication accepted
#
### Request status of messages.
#$pop->print("Action: command");
#$pop->print("Command: show voicemail users");
#$pop->print("");
#
##Context    Mbox  User                      Zone       NewMsg
##default    1234  Example Mailbox                           1
##other      1234  Company2 User                             0
#
#my ($results,$start)=(0,0);
#
#my @fields;
#while (($line = $pop->getline)  and ($line !~ /--END/o))
#{
#    if ($start) {
#	@fields = (split ' ', $line);	
#	$results = $results + pop(@fields);
#    }
#
#    $start = 1 if ($line =~ /Context/o);
#}
#
## Logoff
#$pop->print("Action: logoff");
#$pop->print("");
#while (($line = $pop->getline) and ($line !~ /END COMMAND/o))
#{}
#$pop->close();

# workaround for silly realtime, but works only locally
my $results = 0;
$results = `find /var/spool/asterisk/voicemail/ -name '*.wav' | grep INBOX | wc -l`;
chomp($results);

print "messages.value $results\n";
# vim:syntax=perl
