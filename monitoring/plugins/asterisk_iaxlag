#!/usr/bin/perl -w
#
# Copyright (C) 2005 Rodolphe Quiedeville <rodolphe@quiedeville.org>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# If you improve this script please send your version to my email address
# with the copyright notice upgrade with your name.
#
#
# $Log$
# Revision 1.1  2005/10/22 21:04:01  rodo
# Created by Rodolphe Quiedeville
#
# Parameters mandatory:
#
# 	username
# 	secret
#
#%# family=asterisk
#%# capabilities=autoconf

use strict;

my $ret = undef;
if (! eval "require Net::Telnet;")
{
    $ret = "Net::Telnet not found";
}

if ($ARGV[0] and $ARGV[0] eq "config")
{
    print "graph_title Asterisk iax lag\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_vlabel ms\n";
    print "graph_category asterisk\n";
    print "lag.label lag\n";
    print "lag.info lag\n";
    print "jitter.label jitter\n";
    print "jitter.info jitter\n";
    exit 0;
}

my $host = exists $ENV{'host'} ? $ENV{'host'} : "127.0.0.1";
my $port = exists $ENV{'port'} ? $ENV{'port'} : "5038";

my $username = $ENV{'username'};
my $secret   = $ENV{'secret'};

my $pop = new Net::Telnet (Telnetmode => 0);
$pop->open(Host => $host,
	   Port => $port);

## Read connection message.
my $line = $pop->getline;
die $line unless $line =~ /^Asterisk/;

## Send user name.
$pop->print("Action: login");
$pop->print("Username: $username");
$pop->print("Secret: $secret");
$pop->print("Events: off");
$pop->print("");

#Response: Success
#Message: Authentication accepted

## Request status of messages.
$pop->print("Action: command");
$pop->print("Command: iax2 show channels");
$pop->print("");

#Response: Follows
#Channel               Peer             Username    ID (Lo/Rem)  Seq (Tx/Rx)  Lag      Jitter  JitBuf  Format
#IAX2/rodolphe@rodolp  10.8.53.6        rodolphe    00003/01287  00006/00004  00000ms  0148ms  0000ms  gsm
#1 active IAX channel(s)
#--END COMMAND--

my ($lag, $jitter, $start, $channels)=(0,0,0,0);
my @fields;
while (($line = $pop->getline) and ($line !~ /active IAX channel/o))
{
    if ($start) {
	@fields = (split ' ', $line);
	$_ = $fields[5];
	s/ms//;
	$lag = $lag + $_;

	$_ = $fields[6];
	s/ms//;
	$jitter = $jitter + $_;

	$channels++;
    }

    $start = 1 if ($line =~ /Channel/o);
}
while (($line = $pop->getline) and ($line !~ /END COMMAND/o))
{}

$pop->print("Action: logoff");
$pop->print("");
while (($line = $pop->getline) and ($line !~ /END COMMAND/o))
{}
$pop->close();

if ($channels) {
    print "lag.value ".($lag/$channels)."\n";
    print "jitter.value ".($jitter/$channels)."\n";
}
else {
    print "lag.value 0\n";
    print "jitter.value 0\n";
}

# vim:syntax=perl
